{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = \"https://pixabay.com/api/\";\nconst API_KEY = \"46827902-d0f0ee0995e79e4196197bc56\";\nconst PER_PAGE = 15;\n\nexport async function fetchData(query, page) {\n    const params = {\n        key: API_KEY,\n        image_type: \"photo\",\n        orientation: \"horizontal\",\n        safesearch: true,\n        q: query,\n        page: page,\n        per_page: PER_PAGE\n    };\n\n    try {\n        const response = await axios.get(BASE_URL, { params });\n        return response.data;\n    } catch (error) {\n        throw new Error(\"Failed to fetch images.\");\n    }\n}","import SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nlet lightbox;\n\nexport function initializeLightbox() {\n    if (!lightbox) {\n        lightbox = new SimpleLightbox('.list a', {\n            captionDelay: 250,\n            captionsData: 'alt',\n        });\n    } else {\n        lightbox.refresh();\n    }\n}\n\nexport function createMarkup(arr) {\n    return arr.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) =>\n        `<li class=\"list__item\">\n            <a href=\"${largeImageURL}\">\n                <img src=\"${webformatURL}\" alt=\"${tags}\" class=\"list__image\"/>\n            </a>\n            <div class=\"info\">\n                <p class=\"info-item\"><b>Likes:</b> ${likes}</p>\n                <p class=\"info-item\"><b>Views:</b> ${views}</p>\n                <p class=\"info-item\"><b>Comments:</b> ${comments}</p>\n                <p class=\"info-item\"><b>Downloads:</b> ${downloads}</p>\n            </div>\n        </li>`\n    ).join(\"\");\n}","import { fetchData } from './js/pixabay-api';\nimport { createMarkup, initializeLightbox } from './js/render-functions';\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet currentPage = 1;\nlet currentQuery = '';\nlet totalHits = 0;\nlet loadedHits = 0;\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const form = document.querySelector(\".form\");\n    const container = document.querySelector(\".list\");\n    const title = document.querySelector(\"h1\");\n    const loadMoreBtn = document.querySelector(\".loadMoreBtn\");\n\n    form.addEventListener(\"submit\", handleSearch);\n    loadMoreBtn.addEventListener(\"click\", handleLoadMore);\n\n    async function handleSearch(event) {\n        event.preventDefault();\n\n        const query = event.target.elements.search.value.trim();\n        if (!query) {\n            iziToast.error({ title: \"Error\", message: \"Please enter a search term!\", position: 'topRight' });\n            return;\n        }\n\n        currentQuery = query;\n        currentPage = 1;\n        container.innerHTML = \"\";\n        title.textContent = \"Loading images, please wait...\";\n        loadMoreBtn.classList.remove(\"visible\");\n        loadedHits = 0;\n\n        try {\n            const data = await fetchData(query, currentPage);\n            totalHits = data.totalHits;\n            loadedHits = data.hits.length;\n\n            if (loadedHits === 0) {\n                iziToast.error({ title: \"Error\", message: \"No images found. Try another search term.\", position: 'topRight' });\n            } else {\n                container.innerHTML = createMarkup(data.hits);\n                initializeLightbox();\n\n                if (loadedHits < totalHits) {\n                    loadMoreBtn.classList.add(\"visible\");\n                }\n            }\n        } catch (error) {\n            iziToast.error({ title: \"Error\", message: \"Failed to fetch images. Please try again later!\", position: 'topRight' });\n        } finally {\n            title.textContent = \"\";\n            event.target.reset();\n        }\n    }\n\n   async function handleLoadMore() {\n    currentPage += 1;\n    title.textContent = \"Loading images, please wait...\";\n\n    try {\n        const data = await fetchData(currentQuery, currentPage);\n\n        loadedHits += data.hits.length;\n\n        if (data.hits.length > 0) {\n            container.insertAdjacentHTML('beforeend', createMarkup(data.hits));\n            initializeLightbox();\n\n            // Прокрутка\n            const firstCard = document.querySelector(\".list__item\");\n            const cardHeight = firstCard.getBoundingClientRect().height;\n            window.scrollBy({\n                top: cardHeight * 2,\n                behavior: \"smooth\"\n            });\n        }\n\n        // Если все изображения загружены, скрываем кнопку\n        if (loadedHits >= totalHits) {\n            loadMoreBtn.classList.remove(\"visible\");\n            loadMoreBtn.classList.add(\"hidden\"); // Добавляем только \"hidden\"\n            iziToast.info({\n                title: \"Info\",\n                message: \"We're sorry, but you've reached the end of search results.\",\n                position: 'topRight'\n            });\n        } else {\n            loadMoreBtn.classList.add(\"visible\");\n            loadMoreBtn.classList.remove(\"hidden\"); // Убираем \"hidden\"\n        }\n\n    } catch (error) {\n        iziToast.error({\n            title: \"Error\",\n            message: \"Failed to fetch images. Please try again later!\",\n            position: 'topRight'\n        });\n    } finally {\n        title.textContent = \"\"; \n        console.log(loadMoreBtn.classList);\n    }\n}\n\n});"],"names":["BASE_URL","API_KEY","PER_PAGE","fetchData","query","page","params","axios","lightbox","initializeLightbox","SimpleLightbox","createMarkup","arr","webformatURL","largeImageURL","tags","likes","views","comments","downloads","currentPage","currentQuery","totalHits","loadedHits","form","container","title","loadMoreBtn","handleSearch","handleLoadMore","event","iziToast","data","cardHeight"],"mappings":"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"}